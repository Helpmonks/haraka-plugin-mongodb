; This file must be placed in "config" directory of your Haraka server.

;
; MongoDB Credentials
;

[mongodb]
; user
user=
; password
pass=
; host
host=127.0.0.1
; string (full mongodb connection string)
string=
; port
port=27017
; database name
db=myApp
; restart = throw error on insert error
restart=yes

; collection name
[collections]
queue=email_incoming_haraka
delivery=email_delivery_results

; Absolute path to store attachments
[attachments]
path=/opt/attachments
; The below path has to exists or else we stop Haraka from starting. Leave empty if you don't want to execute a check.
; Great if you have to make sure that a value is mounted or keeps being mounted. If we loose connection we exit Haraka.
path_check=
; Attachments that should always be rejected. The values below are the ones that Gmail and Outlook also reject
reject=['application/x-freearc','application/x-bzip','application/x-bzip2','application/x-csh','application/gzip','application/java-archive','text/javascript','application/vnd.apple.installer+xml','application/x-httpd-php','application/x-sh','application/xhtml+xml','application/vnd.microsoft.portable-executable','application/x-msdownload','application/exe','application/x-exe','application/dos-exe','vms/exe','application/x-winexe','application/msdos-windows','application/x-msdos-program']
custom_content_type={ 'application/imed' : ['imed'] }
; You can also reject attachments by filename. Enter the complete filename or only part of it
reject_by_name=['~WRD']

; Convert inline images or not
; cid = leave value as cid:(number) - this is useful if you want to process the images later on
; base64 = convert inline images to base64 - will convert inline images to base64 and remove it from the attachment array
; path = convert the cid:(number) value to the path given, the filename will be appended to your path, e.g., "(path)/image.png".
; Do NOT append a "/" at the end of your path
cid = cid

; Enable the section you want
[enable]
queue=yes
delivery=yes

; Message settings
; MongoDB has a limit of 16 MB per document. Hence you might want to check the size of the message (https://docs.mongodb.com/manual/reference/limits/)
[message]
limit=16777216
; Store the whole raw email and the parsed haraka body (Enabling this will create large documents and should only be used for debugging)
store_raw=no

; SMTP settings for error messages
; Define your custom smtp server settings to send message when a message is to large or there is an error with inserting the message
[smtp]
user=
pass=
host=
port=587
tls=yes
ssl=no
msg_limit=Your message could not be accepted as the message body is over 16 MB. Please remove parts of the email and send again.
msg_error_insert=An error occurred accepting your message. Please send again.
msg_error_parsing=We are not able to parse this message properly. Please make sure this email is RFC body conform.
from=mailer-daemon@domain.com
; CC and BCC can be a comma separated list of email addresses
cc=
bcc=

; Limit settings
; Limit incoming messages. Please see the README for instructions
[limits]
incoming=no
incoming_collection=limit_incoming
; Limit in seconds
incoming_seconds=30
; Domains you want to exclude from the limits check
exclude=['helpmonks.com','helpmonks.net','helpmonks.org','sendmonks.net','sendmonks.com','razuna.com','razuna.org']
; Domains that should be INCLUDED in the limits check (when left as an empty array it will check every email)
include=[]
; Set the database to be used. Either "mongodb" or "redis"
db=redis

; Redis Credentials
; Used for the limit incoming option above
[redis]
; user
user=
; password
pass=
; host
host=127.0.0.1
; string (full redis connection string)
string=
; port
port=6379

